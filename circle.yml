version: 2
defaults: &defaults
  working_directory: /go/src/github.com/apprenda/kismatic
  docker:
    - image: golang:1.8

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Unit tests
          command: make bare-test
      - run:
          name: Verify gofmt
          command: diff -u <(echo -n) <(gofmt -d ./pkg ./cmd)
      - run:
          name: Linux dist
          command: GOOS=linux make bare-dist
      - store_artifacts:
          path: out/kismatic.tar.gz
          destination: kismatic-linux-amd64.tar.gz
      - run:
          name: Copy linux pkg to release dir # Used for releasing to GH
          command: mkdir release && cp out/kismatic.tar.gz release/kismatic-$(CIRCLE_TAG)-linux-amd64.tar.gz
      - run:
          name: Create dir in tmpfs for ansible inside docker
          command: mkdir -p /run/user/1026 && chown 1026:1026 /run/user/1026
      - run:
          name: Set integration test SSH Key 
          command: echo "$KISMATIC_INT_TEST_KEY" | base64 -d > ~/.ssh/kismatic-integration-testing.pem
      - run:
          name: Set permissions on SSH key
          command: chmod 0600 ~/.ssh/kismatic-integration-testing.pem
      - run:
          name: Integration tests
          command: make just-integration-test
          no_output_timeout: 30m
          environment:
            GINKGO_OPTS: "-nodes=64 --flakeAttempts=2"
            ANSIBLE_SSH_CONTROL_PATH: "/run/user/1026/ssh-%%r-%%h-%%p"
            ANSIBLE_SSH_ARGS: "-o ControlMaster=auto -o ControlPersist=1800s -o ControlPath=/run/user/1026/ssh-%r-%h-%p"    
      - run:
          name: Slow integration tests
          command: |
            if [[ -n "$CIRCLE_TAG" || -n "$RUN_SLOW_TESTS" ]]
            then
              make slow-integration-test
            fi
          no_output_timeout: 90m
          environment:
            GINKGO_OPTS: "-nodes=64 --flakeAttempts=2"
            ANSIBLE_SSH_CONTROL_PATH: "/run/user/1026/ssh-%%r-%%h-%%p"
            ANSIBLE_SSH_ARGS: "-o ControlMaster=auto -o ControlPersist=1800s -o ControlPath=/run/user/1026/ssh-%r-%h-%p"
      - run:
          name: Darwin dist
          command: GLIDE_GOOS=linux GOOS=darwin make bare-dist
      - store_artifacts:
          path: out/kismatic.tar.gz
          destination: kismatic-darwin-amd64.tar.gz      
      - run:
          name: Copy darwin pkg to release dir  # Used for releasing to GH
          command: mv out/kismatic.tar.gz release/kismatic-$(CIRCLE_TAG)-darwin-amd64.tar.gz
      - run:
          name: Create draft release on GitHub
          command: | 
            if [[ -n "$CIRCLE_TAG" ]]
            then
              wget https://github.com/tcnksm/ghr/releases/download/v0.5.4/ghr_v0.5.4_linux_amd64.zip
              unzip ghr_v0.5.4_linux_amd64.zip
              ./ghr -draft -u "$CIRCLE_PROJECT_USERNAME" "$CIRCLE_TAG-draft" release/
            fi

deployment:
  fake_deploy_for_cci2:
    tag: /.*/
    commands:
      - echo "make tags run in 2.0"
